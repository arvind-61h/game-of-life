pipeline
{
    agent any
    stages
    {
        stage('Build and Packaging ')
        {
            steps
            {
                sh 'mvn clean package'

            }
            post{
                success{
                    archiveArtifacts artifacts: '**/*.jar, **/*.war', followSymlinks: false
                }
            }
        }
        stage('Unit-Testing')
        {
            steps
            {
                sh 'mvn test'
            }
            post{
                always{
                    junit 'gameoflife-core/target/surefire-reports/*.xml'
                }
            }
        }
        stage('Code-Analysis')
        {
            steps
            {
                withSonarQubeEnv('sonar1')
                {
                    sh 'mvn sonar:sonar'
                }
            }
        }
        stage ('Deploying Artifacts to Artifacts server') {
            steps{
                script{
                    def server = Artifactory.server('Artifactory-1')
                    def uploadSpec = """{
                      "files": [
                        {
                          "pattern": "**/*.jar, **/*.war",
                          "target": "libs-snapshot-local"
                        }
                      ]
                    }"""
                    server.upload spec: uploadSpec
                }
            }
        }
        post{
            always{
                rtPublishBuildInfo (serverId: Artifactory-1 )
            }
        }
    }
}